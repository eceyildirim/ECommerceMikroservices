// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using StockService.Infrastructure.Data;

#nullable disable

namespace StockService.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("StockService.Domain.Entities.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<decimal>("BasePrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = new Guid("3027ccfd-d16f-4209-8846-000000000001"),
                            BasePrice = 9925.06m,
                            CreatedAt = new DateTime(2025, 6, 26, 1, 15, 0, 0, DateTimeKind.Utc),
                            IsDeleted = false,
                            Name = "Laptop"
                        },
                        new
                        {
                            Id = new Guid("3027ccfd-d16f-4209-8846-000000000002"),
                            BasePrice = 14860.37m,
                            CreatedAt = new DateTime(2025, 6, 26, 1, 15, 0, 0, DateTimeKind.Utc),
                            IsDeleted = false,
                            Name = "Akıllı Telefon"
                        },
                        new
                        {
                            Id = new Guid("3027ccfd-d16f-4209-8846-000000000003"),
                            BasePrice = 4061.84m,
                            CreatedAt = new DateTime(2025, 6, 26, 1, 15, 0, 0, DateTimeKind.Utc),
                            IsDeleted = false,
                            Name = "Tablet"
                        },
                        new
                        {
                            Id = new Guid("3027ccfd-d16f-4209-8846-000000000004"),
                            BasePrice = 11921.34m,
                            CreatedAt = new DateTime(2025, 6, 26, 1, 15, 0, 0, DateTimeKind.Utc),
                            IsDeleted = false,
                            Name = "Bluetooth Kulaklık"
                        },
                        new
                        {
                            Id = new Guid("3027ccfd-d16f-4209-8846-000000000005"),
                            BasePrice = 7505.19m,
                            CreatedAt = new DateTime(2025, 6, 26, 1, 15, 0, 0, DateTimeKind.Utc),
                            IsDeleted = false,
                            Name = "Akıllı Saat"
                        },
                        new
                        {
                            Id = new Guid("3027ccfd-d16f-4209-8846-000000000006"),
                            BasePrice = 3827.2m,
                            CreatedAt = new DateTime(2025, 6, 26, 1, 15, 0, 0, DateTimeKind.Utc),
                            IsDeleted = false,
                            Name = "Harici Disk"
                        },
                        new
                        {
                            Id = new Guid("3027ccfd-d16f-4209-8846-000000000007"),
                            BasePrice = 4091.75m,
                            CreatedAt = new DateTime(2025, 6, 26, 1, 15, 0, 0, DateTimeKind.Utc),
                            IsDeleted = false,
                            Name = "Kamera"
                        },
                        new
                        {
                            Id = new Guid("3027ccfd-d16f-4209-8846-000000000008"),
                            BasePrice = 5943.31m,
                            CreatedAt = new DateTime(2025, 6, 26, 1, 15, 0, 0, DateTimeKind.Utc),
                            IsDeleted = false,
                            Name = "Oyun Konsolu"
                        },
                        new
                        {
                            Id = new Guid("3027ccfd-d16f-4209-8846-000000000009"),
                            BasePrice = 8054.15m,
                            CreatedAt = new DateTime(2025, 6, 26, 1, 15, 0, 0, DateTimeKind.Utc),
                            IsDeleted = false,
                            Name = "SSD Disk"
                        },
                        new
                        {
                            Id = new Guid("3027ccfd-d16f-4209-8846-000000000010"),
                            BasePrice = 14925.49m,
                            CreatedAt = new DateTime(2025, 6, 26, 1, 15, 0, 0, DateTimeKind.Utc),
                            IsDeleted = false,
                            Name = "Kablosuz Mouse"
                        },
                        new
                        {
                            Id = new Guid("3027ccfd-d16f-4209-8846-000000000011"),
                            BasePrice = 3397.15m,
                            CreatedAt = new DateTime(2025, 6, 26, 1, 15, 0, 0, DateTimeKind.Utc),
                            IsDeleted = false,
                            Name = "Akıllı Saat"
                        },
                        new
                        {
                            Id = new Guid("3027ccfd-d16f-4209-8846-000000000012"),
                            BasePrice = 6796.93m,
                            CreatedAt = new DateTime(2025, 6, 26, 1, 15, 0, 0, DateTimeKind.Utc),
                            IsDeleted = false,
                            Name = "Laptop Çantası"
                        });
                });

            modelBuilder.Entity("StockService.Domain.Entities.Stock", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uuid");

                    b.Property<int>("QuantityAvailable")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("Stocks");
                });

            modelBuilder.Entity("StockService.Domain.Entities.StockTransaction", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("OrderId")
                        .HasColumnType("uuid");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer");

                    b.Property<Guid>("StockId")
                        .HasColumnType("uuid");

                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("StockId");

                    b.ToTable("StockTransactions");
                });

            modelBuilder.Entity("StockService.Domain.Entities.Stock", b =>
                {
                    b.HasOne("StockService.Domain.Entities.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("StockService.Domain.Entities.StockTransaction", b =>
                {
                    b.HasOne("StockService.Domain.Entities.Stock", "Stock")
                        .WithMany("Transactions")
                        .HasForeignKey("StockId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Stock");
                });

            modelBuilder.Entity("StockService.Domain.Entities.Stock", b =>
                {
                    b.Navigation("Transactions");
                });
#pragma warning restore 612, 618
        }
    }
}
