// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using OrderService.Infrastructure.Data;

#nullable disable

namespace OrderService.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("OrderService.Domain.Entities.Address", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("AddressLine")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<string>("AddressLine2")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<Guid>("CountryId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("DistrictId")
                        .HasColumnType("uuid");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<Guid>("NeighborhoodId")
                        .HasColumnType("uuid");

                    b.Property<string>("PostalCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.Property<Guid>("ProvinceId")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("DistrictId");

                    b.HasIndex("NeighborhoodId");

                    b.HasIndex("ProvinceId");

                    b.ToTable("Addresses");

                    b.HasData(
                        new
                        {
                            Id = new Guid("1d0f4382-6602-4520-896b-c62a0ec0b97c"),
                            AddressLine = "No: 5 Daire : 22 Seyhan / Adana",
                            AddressLine2 = "",
                            CountryId = new Guid("6588ba56-d758-47e7-8c8f-f90a2f46d70a"),
                            CreatedAt = new DateTime(2025, 6, 26, 1, 15, 0, 0, DateTimeKind.Utc),
                            CustomerId = new Guid("a37038d7-d16f-4209-8846-000000000001"),
                            DistrictId = new Guid("ef8627cc-ad2b-4fa7-9450-4f570dd1f63e"),
                            IsDeleted = false,
                            NeighborhoodId = new Guid("74662223-7112-4e09-a7b9-a4fea757d133"),
                            PostalCode = "1010",
                            ProvinceId = new Guid("e921956a-48ed-47ec-99b5-b6ebe3b3b348")
                        },
                        new
                        {
                            Id = new Guid("bd849fc1-0c6f-4778-9ba8-b352c79df304"),
                            AddressLine = "No: 7 Daire : 13 Çankaya / Ankara",
                            AddressLine2 = "",
                            CountryId = new Guid("6588ba56-d758-47e7-8c8f-f90a2f46d70a"),
                            CreatedAt = new DateTime(2025, 6, 26, 1, 15, 0, 0, DateTimeKind.Utc),
                            CustomerId = new Guid("a37038d7-d16f-4209-8846-000000000002"),
                            DistrictId = new Guid("9f147822-ff2f-4804-ae62-d58931f56d24"),
                            IsDeleted = false,
                            NeighborhoodId = new Guid("0b4cb6df-6bd8-4224-9608-3b99e7afe550"),
                            PostalCode = "06690",
                            ProvinceId = new Guid("0df01398-e42b-4f53-b00f-0e5a7a8978b2")
                        });
                });

            modelBuilder.Entity("OrderService.Domain.Entities.Country", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("character varying(5)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("Countries");

                    b.HasData(
                        new
                        {
                            Id = new Guid("6588ba56-d758-47e7-8c8f-f90a2f46d70a"),
                            Code = "TR",
                            CreatedAt = new DateTime(2025, 6, 26, 1, 15, 0, 0, DateTimeKind.Utc),
                            IsDeleted = false,
                            Name = "Türkiye"
                        });
                });

            modelBuilder.Entity("OrderService.Domain.Entities.Customer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            Id = new Guid("a37038d7-d16f-4209-8846-000000000001"),
                            CreatedAt = new DateTime(2025, 6, 26, 1, 15, 0, 0, DateTimeKind.Utc),
                            Email = "ahmet.yılmaz@example.com",
                            IsDeleted = false,
                            Name = "Ahmet",
                            PhoneNumber = "+90 5316686733",
                            Surname = "Yılmaz"
                        },
                        new
                        {
                            Id = new Guid("a37038d7-d16f-4209-8846-000000000002"),
                            CreatedAt = new DateTime(2025, 6, 26, 1, 15, 0, 0, DateTimeKind.Utc),
                            Email = "mehmet.demir@example.com",
                            IsDeleted = false,
                            Name = "Mehmet",
                            PhoneNumber = "+90 5317539877",
                            Surname = "Demir"
                        },
                        new
                        {
                            Id = new Guid("a37038d7-d16f-4209-8846-000000000003"),
                            CreatedAt = new DateTime(2025, 6, 26, 1, 15, 0, 0, DateTimeKind.Utc),
                            Email = "ayşe.çelik@example.com",
                            IsDeleted = false,
                            Name = "Ayşe",
                            PhoneNumber = "+90 5493691283",
                            Surname = "Çelik"
                        },
                        new
                        {
                            Id = new Guid("a37038d7-d16f-4209-8846-000000000004"),
                            CreatedAt = new DateTime(2025, 6, 26, 1, 15, 0, 0, DateTimeKind.Utc),
                            Email = "fatma.kara@example.com",
                            IsDeleted = false,
                            Name = "Fatma",
                            PhoneNumber = "+90 5427784816",
                            Surname = "Kara"
                        },
                        new
                        {
                            Id = new Guid("a37038d7-d16f-4209-8846-000000000005"),
                            CreatedAt = new DateTime(2025, 6, 26, 1, 15, 0, 0, DateTimeKind.Utc),
                            Email = "emre.şahin@example.com",
                            IsDeleted = false,
                            Name = "Emre",
                            PhoneNumber = "+90 5499372638",
                            Surname = "Şahin"
                        });
                });

            modelBuilder.Entity("OrderService.Domain.Entities.District", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<Guid>("ProvinceId")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("ProvinceId");

                    b.ToTable("Districts");

                    b.HasData(
                        new
                        {
                            Id = new Guid("9f147822-ff2f-4804-ae62-d58931f56d24"),
                            CreatedAt = new DateTime(2025, 6, 26, 1, 15, 0, 0, DateTimeKind.Utc),
                            IsDeleted = false,
                            Name = "Seyhan",
                            ProvinceId = new Guid("0df01398-e42b-4f53-b00f-0e5a7a8978b2")
                        },
                        new
                        {
                            Id = new Guid("ef45957b-2e92-40a0-b8d8-5591c3538b56"),
                            CreatedAt = new DateTime(2025, 6, 26, 1, 15, 0, 0, DateTimeKind.Utc),
                            IsDeleted = false,
                            Name = "Çukurova",
                            ProvinceId = new Guid("0df01398-e42b-4f53-b00f-0e5a7a8978b2")
                        },
                        new
                        {
                            Id = new Guid("ef8627cc-ad2b-4fa7-9450-4f570dd1f63e"),
                            CreatedAt = new DateTime(2025, 6, 26, 1, 15, 0, 0, DateTimeKind.Utc),
                            IsDeleted = false,
                            Name = "Çankaya",
                            ProvinceId = new Guid("e921956a-48ed-47ec-99b5-b6ebe3b3b348")
                        },
                        new
                        {
                            Id = new Guid("fa8a453d-0342-4a59-a356-1b7e1a335b52"),
                            CreatedAt = new DateTime(2025, 6, 26, 1, 15, 0, 0, DateTimeKind.Utc),
                            IsDeleted = false,
                            Name = "Keçiören",
                            ProvinceId = new Guid("e921956a-48ed-47ec-99b5-b6ebe3b3b348")
                        },
                        new
                        {
                            Id = new Guid("e89d05a3-77c3-4083-91f9-48a69220ef08"),
                            CreatedAt = new DateTime(2025, 6, 26, 1, 15, 0, 0, DateTimeKind.Utc),
                            IsDeleted = false,
                            Name = "Muratpaşa",
                            ProvinceId = new Guid("0bf70dca-87a1-4e40-a0c1-5b2dc6767afb")
                        },
                        new
                        {
                            Id = new Guid("ab0e7e28-a602-43dd-b186-97551527a4cf"),
                            CreatedAt = new DateTime(2025, 6, 26, 1, 15, 0, 0, DateTimeKind.Utc),
                            IsDeleted = false,
                            Name = "Konyaaltı",
                            ProvinceId = new Guid("0bf70dca-87a1-4e40-a0c1-5b2dc6767afb")
                        },
                        new
                        {
                            Id = new Guid("4ca79d56-97f7-41e7-a921-81ae203b6a9f"),
                            CreatedAt = new DateTime(2025, 6, 26, 1, 15, 0, 0, DateTimeKind.Utc),
                            IsDeleted = false,
                            Name = "Osmangazi",
                            ProvinceId = new Guid("922e3d42-5970-48db-b164-bbba26ea1816")
                        },
                        new
                        {
                            Id = new Guid("852d995d-6bdf-4336-b9ef-2ba939f51107"),
                            CreatedAt = new DateTime(2025, 6, 26, 1, 15, 0, 0, DateTimeKind.Utc),
                            IsDeleted = false,
                            Name = "Nilüfer",
                            ProvinceId = new Guid("922e3d42-5970-48db-b164-bbba26ea1816")
                        },
                        new
                        {
                            Id = new Guid("5fad29e4-730b-43d2-8dcb-25800353d3b8"),
                            CreatedAt = new DateTime(2025, 6, 26, 1, 15, 0, 0, DateTimeKind.Utc),
                            IsDeleted = false,
                            Name = "Karşıyaka",
                            ProvinceId = new Guid("16599411-030b-495e-8a6c-6a3af09b1efc")
                        },
                        new
                        {
                            Id = new Guid("432eac18-6f63-44e2-9f0a-7a9790a3cb7c"),
                            CreatedAt = new DateTime(2025, 6, 26, 1, 15, 0, 0, DateTimeKind.Utc),
                            IsDeleted = false,
                            Name = "Bornova",
                            ProvinceId = new Guid("16599411-030b-495e-8a6c-6a3af09b1efc")
                        },
                        new
                        {
                            Id = new Guid("15b653d0-d69d-4e82-abbb-fc605b20bd88"),
                            CreatedAt = new DateTime(2025, 6, 26, 1, 15, 0, 0, DateTimeKind.Utc),
                            IsDeleted = false,
                            Name = "Selçuklu",
                            ProvinceId = new Guid("cdc09180-6dd8-4b24-8ddd-b7b2ef463310")
                        },
                        new
                        {
                            Id = new Guid("0e76fb72-eeb1-454c-867d-d4b616cc20aa"),
                            CreatedAt = new DateTime(2025, 6, 26, 1, 15, 0, 0, DateTimeKind.Utc),
                            IsDeleted = false,
                            Name = "Meram",
                            ProvinceId = new Guid("cdc09180-6dd8-4b24-8ddd-b7b2ef463310")
                        },
                        new
                        {
                            Id = new Guid("a4da7b97-d21b-45ae-b5d9-eb8217ba4101"),
                            CreatedAt = new DateTime(2025, 6, 26, 1, 15, 0, 0, DateTimeKind.Utc),
                            IsDeleted = false,
                            Name = "Şahinbey",
                            ProvinceId = new Guid("56388bfa-007b-4742-a9c1-0bfc07766fa8")
                        },
                        new
                        {
                            Id = new Guid("5455ae93-316f-4f09-b673-41b694961d30"),
                            CreatedAt = new DateTime(2025, 6, 26, 1, 15, 0, 0, DateTimeKind.Utc),
                            IsDeleted = false,
                            Name = "Şehitkamil",
                            ProvinceId = new Guid("56388bfa-007b-4742-a9c1-0bfc07766fa8")
                        },
                        new
                        {
                            Id = new Guid("6ed5a42a-2b61-49e0-8dae-68b108c158f6"),
                            CreatedAt = new DateTime(2025, 6, 26, 1, 15, 0, 0, DateTimeKind.Utc),
                            IsDeleted = false,
                            Name = "İlkadım",
                            ProvinceId = new Guid("bcf25752-d7f4-4c90-a597-18b9371d4ddb")
                        },
                        new
                        {
                            Id = new Guid("89b9eac8-1a1c-415e-8662-55ea01c84871"),
                            CreatedAt = new DateTime(2025, 6, 26, 1, 15, 0, 0, DateTimeKind.Utc),
                            IsDeleted = false,
                            Name = "Atakum",
                            ProvinceId = new Guid("bcf25752-d7f4-4c90-a597-18b9371d4ddb")
                        },
                        new
                        {
                            Id = new Guid("66373676-5a8a-4e3b-9eda-5ba02fdf3cf5"),
                            CreatedAt = new DateTime(2025, 6, 26, 1, 15, 0, 0, DateTimeKind.Utc),
                            IsDeleted = false,
                            Name = "Ortahisar",
                            ProvinceId = new Guid("52415f74-3537-4ed9-a17b-ed31d0e18aea")
                        },
                        new
                        {
                            Id = new Guid("dc7d5f8f-84b3-4e0b-ad0a-a50b6179d51f"),
                            CreatedAt = new DateTime(2025, 6, 26, 1, 15, 0, 0, DateTimeKind.Utc),
                            IsDeleted = false,
                            Name = "Akçaabat",
                            ProvinceId = new Guid("52415f74-3537-4ed9-a17b-ed31d0e18aea")
                        },
                        new
                        {
                            Id = new Guid("00e75515-6436-48bd-8062-08d0c24e6ac7"),
                            CreatedAt = new DateTime(2025, 6, 26, 1, 15, 0, 0, DateTimeKind.Utc),
                            IsDeleted = false,
                            Name = "Tepebaşı",
                            ProvinceId = new Guid("7715dff3-417b-46d1-8085-c9e857a9589b")
                        },
                        new
                        {
                            Id = new Guid("6ed7f6fa-ef5f-4f6a-bad1-ec2c6c9696bb"),
                            CreatedAt = new DateTime(2025, 6, 26, 1, 15, 0, 0, DateTimeKind.Utc),
                            IsDeleted = false,
                            Name = "Odunpazarı",
                            ProvinceId = new Guid("7715dff3-417b-46d1-8085-c9e857a9589b")
                        });
                });

            modelBuilder.Entity("OrderService.Domain.Entities.Neighborhood", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("DistrictId")
                        .HasColumnType("uuid");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("DistrictId");

                    b.ToTable("Neighborhoods");

                    b.HasData(
                        new
                        {
                            Id = new Guid("74662223-7112-4e09-a7b9-a4fea757d133"),
                            CreatedAt = new DateTime(2025, 6, 26, 1, 15, 0, 0, DateTimeKind.Utc),
                            DistrictId = new Guid("9f147822-ff2f-4804-ae62-d58931f56d24"),
                            IsDeleted = false,
                            Name = "Bahçe Mahallesi"
                        },
                        new
                        {
                            Id = new Guid("2e723ede-eba0-48dc-bacc-397ce65d95dd"),
                            CreatedAt = new DateTime(2025, 6, 26, 1, 15, 0, 0, DateTimeKind.Utc),
                            DistrictId = new Guid("9f147822-ff2f-4804-ae62-d58931f56d24"),
                            IsDeleted = false,
                            Name = "Toros Mahallesi"
                        },
                        new
                        {
                            Id = new Guid("a88b21b4-2df1-40c2-bc92-1d216644b789"),
                            CreatedAt = new DateTime(2025, 6, 26, 1, 15, 0, 0, DateTimeKind.Utc),
                            DistrictId = new Guid("ef45957b-2e92-40a0-b8d8-5591c3538b56"),
                            IsDeleted = false,
                            Name = "Fettah Mahallesi"
                        },
                        new
                        {
                            Id = new Guid("4646c942-1d48-42cd-bf67-8827ae9edcb5"),
                            CreatedAt = new DateTime(2025, 6, 26, 1, 15, 0, 0, DateTimeKind.Utc),
                            DistrictId = new Guid("ef45957b-2e92-40a0-b8d8-5591c3538b56"),
                            IsDeleted = false,
                            Name = "Çay Mahallesi"
                        },
                        new
                        {
                            Id = new Guid("0b4cb6df-6bd8-4224-9608-3b99e7afe550"),
                            CreatedAt = new DateTime(2025, 6, 26, 1, 15, 0, 0, DateTimeKind.Utc),
                            DistrictId = new Guid("ef8627cc-ad2b-4fa7-9450-4f570dd1f63e"),
                            IsDeleted = false,
                            Name = "Kızılay Mahallesi"
                        },
                        new
                        {
                            Id = new Guid("f376d0eb-789c-43e4-862c-d4fbd2ad71e2"),
                            CreatedAt = new DateTime(2025, 6, 26, 1, 15, 0, 0, DateTimeKind.Utc),
                            DistrictId = new Guid("ef8627cc-ad2b-4fa7-9450-4f570dd1f63e"),
                            IsDeleted = false,
                            Name = "Bahçelievler Mahallesi"
                        },
                        new
                        {
                            Id = new Guid("d00cdc4c-6924-4ea9-a220-d0a5953df310"),
                            CreatedAt = new DateTime(2025, 6, 26, 1, 15, 0, 0, DateTimeKind.Utc),
                            DistrictId = new Guid("fa8a453d-0342-4a59-a356-1b7e1a335b52"),
                            IsDeleted = false,
                            Name = "Etlik Mahallesi"
                        },
                        new
                        {
                            Id = new Guid("fbcb61da-c522-4820-a722-7a5eff1aeb9d"),
                            CreatedAt = new DateTime(2025, 6, 26, 1, 15, 0, 0, DateTimeKind.Utc),
                            DistrictId = new Guid("fa8a453d-0342-4a59-a356-1b7e1a335b52"),
                            IsDeleted = false,
                            Name = "Aşağı Eğlence Mahallesi"
                        },
                        new
                        {
                            Id = new Guid("d4a93ddc-5472-46a3-8327-d217948504dd"),
                            CreatedAt = new DateTime(2025, 6, 26, 1, 15, 0, 0, DateTimeKind.Utc),
                            DistrictId = new Guid("e89d05a3-77c3-4083-91f9-48a69220ef08"),
                            IsDeleted = false,
                            Name = "Çağlayan Mahallesi"
                        },
                        new
                        {
                            Id = new Guid("6a996b27-4df6-459a-8fbc-8f3216ea11bf"),
                            CreatedAt = new DateTime(2025, 6, 26, 1, 15, 0, 0, DateTimeKind.Utc),
                            DistrictId = new Guid("e89d05a3-77c3-4083-91f9-48a69220ef08"),
                            IsDeleted = false,
                            Name = "Altınkum Mahallesi"
                        },
                        new
                        {
                            Id = new Guid("4f05ea49-74b4-488c-87bc-4aa286e82b78"),
                            CreatedAt = new DateTime(2025, 6, 26, 1, 15, 0, 0, DateTimeKind.Utc),
                            DistrictId = new Guid("ab0e7e28-a602-43dd-b186-97551527a4cf"),
                            IsDeleted = false,
                            Name = "Hurma Mahallesi"
                        },
                        new
                        {
                            Id = new Guid("514ca6da-e656-4814-af7d-29a7220e5e85"),
                            CreatedAt = new DateTime(2025, 6, 26, 1, 15, 0, 0, DateTimeKind.Utc),
                            DistrictId = new Guid("ab0e7e28-a602-43dd-b186-97551527a4cf"),
                            IsDeleted = false,
                            Name = "Gürsu Mahallesi"
                        },
                        new
                        {
                            Id = new Guid("29ab92d7-7586-413d-8041-a42b6f6372b5"),
                            CreatedAt = new DateTime(2025, 6, 26, 1, 15, 0, 0, DateTimeKind.Utc),
                            DistrictId = new Guid("4ca79d56-97f7-41e7-a921-81ae203b6a9f"),
                            IsDeleted = false,
                            Name = "Beşevler Mahallesi"
                        },
                        new
                        {
                            Id = new Guid("6477848e-7d2b-446d-adff-4c742b57be13"),
                            CreatedAt = new DateTime(2025, 6, 26, 1, 15, 0, 0, DateTimeKind.Utc),
                            DistrictId = new Guid("4ca79d56-97f7-41e7-a921-81ae203b6a9f"),
                            IsDeleted = false,
                            Name = "Yıldırım Mahallesi"
                        },
                        new
                        {
                            Id = new Guid("65942c42-a6b5-4af0-b63d-0a6e3d3df99e"),
                            CreatedAt = new DateTime(2025, 6, 26, 1, 15, 0, 0, DateTimeKind.Utc),
                            DistrictId = new Guid("852d995d-6bdf-4336-b9ef-2ba939f51107"),
                            IsDeleted = false,
                            Name = "Ataevler Mahallesi"
                        },
                        new
                        {
                            Id = new Guid("ab1872a3-a512-472d-98ea-81febc6bc7ba"),
                            CreatedAt = new DateTime(2025, 6, 26, 1, 15, 0, 0, DateTimeKind.Utc),
                            DistrictId = new Guid("852d995d-6bdf-4336-b9ef-2ba939f51107"),
                            IsDeleted = false,
                            Name = "Nilüfer Mahallesi"
                        },
                        new
                        {
                            Id = new Guid("5ba61236-c1c0-4517-b2f8-a8a0fe679cda"),
                            CreatedAt = new DateTime(2025, 6, 26, 1, 15, 0, 0, DateTimeKind.Utc),
                            DistrictId = new Guid("15b653d0-d69d-4e82-abbb-fc605b20bd88"),
                            IsDeleted = false,
                            Name = "Fevzi Çakmak Mahallesi"
                        },
                        new
                        {
                            Id = new Guid("52ca3967-9b24-4878-82b0-242cee442647"),
                            CreatedAt = new DateTime(2025, 6, 26, 1, 15, 0, 0, DateTimeKind.Utc),
                            DistrictId = new Guid("15b653d0-d69d-4e82-abbb-fc605b20bd88"),
                            IsDeleted = false,
                            Name = "Bosna Hersek Mahallesi"
                        },
                        new
                        {
                            Id = new Guid("248d4d1b-158b-4bfd-9064-3a0d70490a51"),
                            CreatedAt = new DateTime(2025, 6, 26, 1, 15, 0, 0, DateTimeKind.Utc),
                            DistrictId = new Guid("0e76fb72-eeb1-454c-867d-d4b616cc20aa"),
                            IsDeleted = false,
                            Name = "Fatih Mahallesi"
                        },
                        new
                        {
                            Id = new Guid("0f013f95-53ab-4f4c-b7c7-b79da2ca5cb5"),
                            CreatedAt = new DateTime(2025, 6, 26, 1, 15, 0, 0, DateTimeKind.Utc),
                            DistrictId = new Guid("0e76fb72-eeb1-454c-867d-d4b616cc20aa"),
                            IsDeleted = false,
                            Name = "İstiklal Mahallesi"
                        },
                        new
                        {
                            Id = new Guid("cd60fc90-b557-4682-b394-ca8461182da3"),
                            CreatedAt = new DateTime(2025, 6, 26, 1, 15, 0, 0, DateTimeKind.Utc),
                            DistrictId = new Guid("a4da7b97-d21b-45ae-b5d9-eb8217ba4101"),
                            IsDeleted = false,
                            Name = "Şehitler Mahallesi"
                        },
                        new
                        {
                            Id = new Guid("aa3a6fa6-7e6a-4a56-ae0e-14bd16e696fb"),
                            CreatedAt = new DateTime(2025, 6, 26, 1, 15, 0, 0, DateTimeKind.Utc),
                            DistrictId = new Guid("a4da7b97-d21b-45ae-b5d9-eb8217ba4101"),
                            IsDeleted = false,
                            Name = "Bahçelievler Mahallesi"
                        },
                        new
                        {
                            Id = new Guid("adda523f-05e2-47d3-bf9f-b4df36b15b95"),
                            CreatedAt = new DateTime(2025, 6, 26, 1, 15, 0, 0, DateTimeKind.Utc),
                            DistrictId = new Guid("5455ae93-316f-4f09-b673-41b694961d30"),
                            IsDeleted = false,
                            Name = "Gaziler Mahallesi"
                        },
                        new
                        {
                            Id = new Guid("21dba5fc-2112-4650-89b7-f07861974d5e"),
                            CreatedAt = new DateTime(2025, 6, 26, 1, 15, 0, 0, DateTimeKind.Utc),
                            DistrictId = new Guid("5455ae93-316f-4f09-b673-41b694961d30"),
                            IsDeleted = false,
                            Name = "Fatih Mahallesi"
                        },
                        new
                        {
                            Id = new Guid("22bd9ba9-8a01-40e3-a284-c50cedac828a"),
                            CreatedAt = new DateTime(2025, 6, 26, 1, 15, 0, 0, DateTimeKind.Utc),
                            DistrictId = new Guid("6ed5a42a-2b61-49e0-8dae-68b108c158f6"),
                            IsDeleted = false,
                            Name = "Bahçelievler Mahallesi"
                        },
                        new
                        {
                            Id = new Guid("d73a4eb7-2fc4-4099-86ae-f61678333371"),
                            CreatedAt = new DateTime(2025, 6, 26, 1, 15, 0, 0, DateTimeKind.Utc),
                            DistrictId = new Guid("6ed5a42a-2b61-49e0-8dae-68b108c158f6"),
                            IsDeleted = false,
                            Name = "Kurtuluş Mahallesi"
                        },
                        new
                        {
                            Id = new Guid("947a38fc-04df-4bea-8a19-358669b3feb1"),
                            CreatedAt = new DateTime(2025, 6, 26, 1, 15, 0, 0, DateTimeKind.Utc),
                            DistrictId = new Guid("89b9eac8-1a1c-415e-8662-55ea01c84871"),
                            IsDeleted = false,
                            Name = "Deniz Mahallesi"
                        },
                        new
                        {
                            Id = new Guid("632d3752-8628-4b1c-8b6c-0dbeb45157f6"),
                            CreatedAt = new DateTime(2025, 6, 26, 1, 15, 0, 0, DateTimeKind.Utc),
                            DistrictId = new Guid("89b9eac8-1a1c-415e-8662-55ea01c84871"),
                            IsDeleted = false,
                            Name = "Yeni Mahallesi"
                        },
                        new
                        {
                            Id = new Guid("d2d335fc-9fcd-48ad-a4a2-67c58941df4b"),
                            CreatedAt = new DateTime(2025, 6, 26, 1, 15, 0, 0, DateTimeKind.Utc),
                            DistrictId = new Guid("66373676-5a8a-4e3b-9eda-5ba02fdf3cf5"),
                            IsDeleted = false,
                            Name = "Yenicuma Mahallesi"
                        },
                        new
                        {
                            Id = new Guid("555c9b1e-9135-48ce-a085-521ee20c9f01"),
                            CreatedAt = new DateTime(2025, 6, 26, 1, 15, 0, 0, DateTimeKind.Utc),
                            DistrictId = new Guid("66373676-5a8a-4e3b-9eda-5ba02fdf3cf5"),
                            IsDeleted = false,
                            Name = "Gülbahar Mahallesi"
                        },
                        new
                        {
                            Id = new Guid("df539924-7a12-4dc3-a799-745ef57fa53d"),
                            CreatedAt = new DateTime(2025, 6, 26, 1, 15, 0, 0, DateTimeKind.Utc),
                            DistrictId = new Guid("dc7d5f8f-84b3-4e0b-ad0a-a50b6179d51f"),
                            IsDeleted = false,
                            Name = "Dere Mahallesi"
                        },
                        new
                        {
                            Id = new Guid("0794b782-e1c3-46e1-afe9-a0ede79048a6"),
                            CreatedAt = new DateTime(2025, 6, 26, 1, 15, 0, 0, DateTimeKind.Utc),
                            DistrictId = new Guid("dc7d5f8f-84b3-4e0b-ad0a-a50b6179d51f"),
                            IsDeleted = false,
                            Name = "Yeni Mahallesi"
                        },
                        new
                        {
                            Id = new Guid("a9dc77d4-9c9d-41cd-b20e-77e338556668"),
                            CreatedAt = new DateTime(2025, 6, 26, 1, 15, 0, 0, DateTimeKind.Utc),
                            DistrictId = new Guid("00e75515-6436-48bd-8062-08d0c24e6ac7"),
                            IsDeleted = false,
                            Name = "Porsuk Mahallesi"
                        },
                        new
                        {
                            Id = new Guid("e385fe3a-6499-48f1-9952-bf07e9d6acbe"),
                            CreatedAt = new DateTime(2025, 6, 26, 1, 15, 0, 0, DateTimeKind.Utc),
                            DistrictId = new Guid("00e75515-6436-48bd-8062-08d0c24e6ac7"),
                            IsDeleted = false,
                            Name = "Dumlupınar Mahallesi"
                        },
                        new
                        {
                            Id = new Guid("73b46a77-97d4-4222-881f-f72338dfe86d"),
                            CreatedAt = new DateTime(2025, 6, 26, 1, 15, 0, 0, DateTimeKind.Utc),
                            DistrictId = new Guid("6ed7f6fa-ef5f-4f6a-bad1-ec2c6c9696bb"),
                            IsDeleted = false,
                            Name = "Vadi Mahallesi"
                        },
                        new
                        {
                            Id = new Guid("ac4a73c3-8362-4846-a8b1-6146d019a3ba"),
                            CreatedAt = new DateTime(2025, 6, 26, 1, 15, 0, 0, DateTimeKind.Utc),
                            DistrictId = new Guid("6ed7f6fa-ef5f-4f6a-bad1-ec2c6c9696bb"),
                            IsDeleted = false,
                            Name = "Kültür Mahallesi"
                        });
                });

            modelBuilder.Entity("OrderService.Domain.Entities.Order", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("ShippingAddressId")
                        .HasColumnType("uuid");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("ShippingAddressId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("OrderService.Domain.Entities.OrderItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<Guid>("OrderId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uuid");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.ToTable("OrderItems");
                });

            modelBuilder.Entity("OrderService.Domain.Entities.Province", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("CountryId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.ToTable("Provinces");

                    b.HasData(
                        new
                        {
                            Id = new Guid("0df01398-e42b-4f53-b00f-0e5a7a8978b2"),
                            CountryId = new Guid("6588ba56-d758-47e7-8c8f-f90a2f46d70a"),
                            CreatedAt = new DateTime(2025, 6, 26, 1, 15, 0, 0, DateTimeKind.Utc),
                            IsDeleted = false,
                            Name = "Adana"
                        },
                        new
                        {
                            Id = new Guid("e921956a-48ed-47ec-99b5-b6ebe3b3b348"),
                            CountryId = new Guid("6588ba56-d758-47e7-8c8f-f90a2f46d70a"),
                            CreatedAt = new DateTime(2025, 6, 26, 1, 15, 0, 0, DateTimeKind.Utc),
                            IsDeleted = false,
                            Name = "Ankara"
                        },
                        new
                        {
                            Id = new Guid("0bf70dca-87a1-4e40-a0c1-5b2dc6767afb"),
                            CountryId = new Guid("6588ba56-d758-47e7-8c8f-f90a2f46d70a"),
                            CreatedAt = new DateTime(2025, 6, 26, 1, 15, 0, 0, DateTimeKind.Utc),
                            IsDeleted = false,
                            Name = "Antalya"
                        },
                        new
                        {
                            Id = new Guid("922e3d42-5970-48db-b164-bbba26ea1816"),
                            CountryId = new Guid("6588ba56-d758-47e7-8c8f-f90a2f46d70a"),
                            CreatedAt = new DateTime(2025, 6, 26, 1, 15, 0, 0, DateTimeKind.Utc),
                            IsDeleted = false,
                            Name = "Bursa"
                        },
                        new
                        {
                            Id = new Guid("16599411-030b-495e-8a6c-6a3af09b1efc"),
                            CountryId = new Guid("6588ba56-d758-47e7-8c8f-f90a2f46d70a"),
                            CreatedAt = new DateTime(2025, 6, 26, 1, 15, 0, 0, DateTimeKind.Utc),
                            IsDeleted = false,
                            Name = "İzmir"
                        },
                        new
                        {
                            Id = new Guid("cdc09180-6dd8-4b24-8ddd-b7b2ef463310"),
                            CountryId = new Guid("6588ba56-d758-47e7-8c8f-f90a2f46d70a"),
                            CreatedAt = new DateTime(2025, 6, 26, 1, 15, 0, 0, DateTimeKind.Utc),
                            IsDeleted = false,
                            Name = "Konya"
                        },
                        new
                        {
                            Id = new Guid("56388bfa-007b-4742-a9c1-0bfc07766fa8"),
                            CountryId = new Guid("6588ba56-d758-47e7-8c8f-f90a2f46d70a"),
                            CreatedAt = new DateTime(2025, 6, 26, 1, 15, 0, 0, DateTimeKind.Utc),
                            IsDeleted = false,
                            Name = "Gaziantep"
                        },
                        new
                        {
                            Id = new Guid("bcf25752-d7f4-4c90-a597-18b9371d4ddb"),
                            CountryId = new Guid("6588ba56-d758-47e7-8c8f-f90a2f46d70a"),
                            CreatedAt = new DateTime(2025, 6, 26, 1, 15, 0, 0, DateTimeKind.Utc),
                            IsDeleted = false,
                            Name = "Samsun"
                        },
                        new
                        {
                            Id = new Guid("52415f74-3537-4ed9-a17b-ed31d0e18aea"),
                            CountryId = new Guid("6588ba56-d758-47e7-8c8f-f90a2f46d70a"),
                            CreatedAt = new DateTime(2025, 6, 26, 1, 15, 0, 0, DateTimeKind.Utc),
                            IsDeleted = false,
                            Name = "Trabzon"
                        },
                        new
                        {
                            Id = new Guid("7715dff3-417b-46d1-8085-c9e857a9589b"),
                            CountryId = new Guid("6588ba56-d758-47e7-8c8f-f90a2f46d70a"),
                            CreatedAt = new DateTime(2025, 6, 26, 1, 15, 0, 0, DateTimeKind.Utc),
                            IsDeleted = false,
                            Name = "Eskişehir"
                        });
                });

            modelBuilder.Entity("OrderService.Domain.Entities.Address", b =>
                {
                    b.HasOne("OrderService.Domain.Entities.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OrderService.Domain.Entities.Customer", "Customer")
                        .WithMany("Addresses")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OrderService.Domain.Entities.District", "District")
                        .WithMany()
                        .HasForeignKey("DistrictId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OrderService.Domain.Entities.Neighborhood", "Neighborhood")
                        .WithMany()
                        .HasForeignKey("NeighborhoodId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OrderService.Domain.Entities.Province", "Province")
                        .WithMany()
                        .HasForeignKey("ProvinceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");

                    b.Navigation("Customer");

                    b.Navigation("District");

                    b.Navigation("Neighborhood");

                    b.Navigation("Province");
                });

            modelBuilder.Entity("OrderService.Domain.Entities.District", b =>
                {
                    b.HasOne("OrderService.Domain.Entities.Province", "Province")
                        .WithMany("Districts")
                        .HasForeignKey("ProvinceId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Province");
                });

            modelBuilder.Entity("OrderService.Domain.Entities.Neighborhood", b =>
                {
                    b.HasOne("OrderService.Domain.Entities.District", "District")
                        .WithMany("Neighborhoods")
                        .HasForeignKey("DistrictId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("District");
                });

            modelBuilder.Entity("OrderService.Domain.Entities.Order", b =>
                {
                    b.HasOne("OrderService.Domain.Entities.Customer", "Customer")
                        .WithMany("Orders")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("OrderService.Domain.Entities.Address", "ShippingAddress")
                        .WithMany()
                        .HasForeignKey("ShippingAddressId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("ShippingAddress");
                });

            modelBuilder.Entity("OrderService.Domain.Entities.OrderItem", b =>
                {
                    b.HasOne("OrderService.Domain.Entities.Order", "Order")
                        .WithMany("Items")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");
                });

            modelBuilder.Entity("OrderService.Domain.Entities.Province", b =>
                {
                    b.HasOne("OrderService.Domain.Entities.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Country");
                });

            modelBuilder.Entity("OrderService.Domain.Entities.Customer", b =>
                {
                    b.Navigation("Addresses");

                    b.Navigation("Orders");
                });

            modelBuilder.Entity("OrderService.Domain.Entities.District", b =>
                {
                    b.Navigation("Neighborhoods");
                });

            modelBuilder.Entity("OrderService.Domain.Entities.Order", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("OrderService.Domain.Entities.Province", b =>
                {
                    b.Navigation("Districts");
                });
#pragma warning restore 612, 618
        }
    }
}
